
rewrite.exe:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x30b>
 248:	78 38                	js     282 <_init-0x2fe>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 c7                	add    %al,%bh
 285:	82                   	(bad)  
 286:	01 f5                	add    %esi,%ebp
 288:	54                   	push   %rsp
 289:	0f b3 f2             	btr    %esi,%edx
 28c:	24 6d                	and    $0x6d,%al
 28e:	c8 76 9e ef          	enter  $0x9e76,$0xef
 292:	8d 53 ee             	lea    -0x12(%rbx),%edx
 295:	50                   	push   %rax
 296:	f7 e6                	mul    %esi

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	0b 00                	or     (%rax),%eax
 2d2:	00 00                	add    %al,(%rax)
 2d4:	20 00                	and    %al,(%rax)
	...
 2e6:	00 00                	add    %al,(%rax)
 2e8:	5e                   	pop    %rsi
 2e9:	00 00                	add    %al,(%rax)
 2eb:	00 12                	add    %dl,(%rdx)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 50 00             	add    %dl,0x0(%rax)
 302:	00 00                	add    %al,(%rax)
 304:	12 00                	adc    (%rax),%al
	...
 316:	00 00                	add    %al,(%rax)
 318:	74 00                	je     31a <_init-0x266>
 31a:	00 00                	add    %al,(%rax)
 31c:	12 00                	adc    (%rax),%al
	...
 32e:	00 00                	add    %al,(%rax)
 330:	27                   	(bad)  
 331:	00 00                	add    %al,(%rax)
 333:	00 20                	add    %ah,(%rax)
	...
 345:	00 00                	add    %al,(%rax)
 347:	00 36                	add    %dh,(%rsi)
 349:	00 00                	add    %al,(%rax)
 34b:	00 20                	add    %ah,(%rax)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 65 00             	add    %ah,0x0(%rbp)
 362:	00 00                	add    %al,(%rax)
 364:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000378 <.dynstr>:
 378:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 37c:	6d                   	insl   (%dx),%es:(%rdi)
 37d:	2e 73 6f             	jae,pn 3ef <_init-0x191>
 380:	2e 36 00 5f 49       	cs ss add %bl,0x49(%rdi)
 385:	54                   	push   %rsp
 386:	4d 5f                	rex.WRB pop %r15
 388:	64 65 72 65          	fs gs jb 3f1 <_init-0x18f>
 38c:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 393:	4d 
 394:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 396:	6f                   	outsl  %ds:(%rsi),(%dx)
 397:	6e                   	outsb  %ds:(%rsi),(%dx)
 398:	65 54                	gs push %rsp
 39a:	61                   	(bad)  
 39b:	62                   	(bad)  
 39c:	6c                   	insb   (%dx),%es:(%rdi)
 39d:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 3a1:	67 6d                	insl   (%dx),%es:(%edi)
 3a3:	6f                   	outsl  %ds:(%rsi),(%dx)
 3a4:	6e                   	outsb  %ds:(%rsi),(%dx)
 3a5:	5f                   	pop    %rdi
 3a6:	73 74                	jae    41c <_init-0x164>
 3a8:	61                   	(bad)  
 3a9:	72 74                	jb     41f <_init-0x161>
 3ab:	5f                   	pop    %rdi
 3ac:	5f                   	pop    %rdi
 3ad:	00 5f 49             	add    %bl,0x49(%rdi)
 3b0:	54                   	push   %rsp
 3b1:	4d 5f                	rex.WRB pop %r15
 3b3:	72 65                	jb     41a <_init-0x166>
 3b5:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3bc:	4d 
 3bd:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3bf:	6f                   	outsl  %ds:(%rsi),(%dx)
 3c0:	6e                   	outsb  %ds:(%rsi),(%dx)
 3c1:	65 54                	gs push %rsp
 3c3:	61                   	(bad)  
 3c4:	62                   	(bad)  
 3c5:	6c                   	insb   (%dx),%es:(%rdi)
 3c6:	65 00 70 6f          	add    %dh,%gs:0x6f(%rax)
 3ca:	77 00                	ja     3cc <_init-0x1b4>
 3cc:	6c                   	insb   (%dx),%es:(%rdi)
 3cd:	69 62 63 2e 73 6f 2e 	imul   $0x2e6f732e,0x63(%rdx),%esp
 3d4:	36 00 70 72          	ss add %dh,0x72(%rax)
 3d8:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 3df:	63 78 61             	movsxd 0x61(%rax),%edi
 3e2:	5f                   	pop    %rdi
 3e3:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3e9:	7a 65                	jp     450 <_init-0x130>
 3eb:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3ee:	6c                   	insb   (%dx),%es:(%rdi)
 3ef:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 3f6:	72 74                	jb     46c <_init-0x114>
 3f8:	5f                   	pop    %rdi
 3f9:	6d                   	insl   (%dx),%es:(%rdi)
 3fa:	61                   	(bad)  
 3fb:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 402:	43 5f                	rex.XB pop %r15
 404:	32 2e                	xor    (%rsi),%ch
 406:	32 2e                	xor    (%rsi),%ch
 408:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

000000000000040a <.gnu.version>:
 40a:	00 00                	add    %al,(%rax)
 40c:	00 00                	add    %al,(%rax)
 40e:	02 00                	add    (%rax),%al
 410:	03 00                	add    (%rax),%eax
 412:	02 00                	add    (%rax),%al
 414:	00 00                	add    %al,(%rax)
 416:	00 00                	add    %al,(%rax)
 418:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000420 <.gnu.version_r>:
 420:	01 00                	add    %eax,(%rax)
 422:	01 00                	add    %eax,(%rax)
 424:	01 00                	add    %eax,(%rax)
 426:	00 00                	add    %al,(%rax)
 428:	10 00                	adc    %al,(%rax)
 42a:	00 00                	add    %al,(%rax)
 42c:	20 00                	and    %al,(%rax)
 42e:	00 00                	add    %al,(%rax)
 430:	75 1a                	jne    44c <_init-0x134>
 432:	69 09 00 00 03 00    	imul   $0x30000,(%rcx),%ecx
 438:	86 00                	xchg   %al,(%rax)
 43a:	00 00                	add    %al,(%rax)
 43c:	00 00                	add    %al,(%rax)
 43e:	00 00                	add    %al,(%rax)
 440:	01 00                	add    %eax,(%rax)
 442:	01 00                	add    %eax,(%rax)
 444:	54                   	push   %rsp
 445:	00 00                	add    %al,(%rax)
 447:	00 10                	add    %dl,(%rax)
 449:	00 00                	add    %al,(%rax)
 44b:	00 00                	add    %al,(%rax)
 44d:	00 00                	add    %al,(%rax)
 44f:	00 75 1a             	add    %dh,0x1a(%rbp)
 452:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 458:	86 00                	xchg   %al,(%rax)
 45a:	00 00                	add    %al,(%rax)
 45c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000460 <.rela.dyn>:
 460:	a0 0d 20 00 00 00 00 	movabs 0x80000000000200d,%al
 467:	00 08 
 469:	00 00                	add    %al,(%rax)
 46b:	00 00                	add    %al,(%rax)
 46d:	00 00                	add    %al,(%rax)
 46f:	00 e0                	add    %ah,%al
 471:	06                   	(bad)  
 472:	00 00                	add    %al,(%rax)
 474:	00 00                	add    %al,(%rax)
 476:	00 00                	add    %al,(%rax)
 478:	a8 0d                	test   $0xd,%al
 47a:	20 00                	and    %al,(%rax)
 47c:	00 00                	add    %al,(%rax)
 47e:	00 00                	add    %al,(%rax)
 480:	08 00                	or     %al,(%rax)
 482:	00 00                	add    %al,(%rax)
 484:	00 00                	add    %al,(%rax)
 486:	00 00                	add    %al,(%rax)
 488:	a0 06 00 00 00 00 00 	movabs 0x800000000000006,%al
 48f:	00 08 
 491:	10 20                	adc    %ah,(%rax)
 493:	00 00                	add    %al,(%rax)
 495:	00 00                	add    %al,(%rax)
 497:	00 08                	add    %cl,(%rax)
 499:	00 00                	add    %al,(%rax)
 49b:	00 00                	add    %al,(%rax)
 49d:	00 00                	add    %al,(%rax)
 49f:	00 08                	add    %cl,(%rax)
 4a1:	10 20                	adc    %ah,(%rax)
 4a3:	00 00                	add    %al,(%rax)
 4a5:	00 00                	add    %al,(%rax)
 4a7:	00 10                	add    %dl,(%rax)
 4a9:	10 20                	adc    %ah,(%rax)
 4ab:	00 00                	add    %al,(%rax)
 4ad:	00 00                	add    %al,(%rax)
 4af:	00 08                	add    %cl,(%rax)
 4b1:	00 00                	add    %al,(%rax)
 4b3:	00 00                	add    %al,(%rax)
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 e8                	add    %ch,%al
 4b9:	07                   	(bad)  
 4ba:	00 00                	add    %al,(%rax)
 4bc:	00 00                	add    %al,(%rax)
 4be:	00 00                	add    %al,(%rax)
 4c0:	18 10                	sbb    %dl,(%rax)
 4c2:	20 00                	and    %al,(%rax)
 4c4:	00 00                	add    %al,(%rax)
 4c6:	00 00                	add    %al,(%rax)
 4c8:	08 00                	or     %al,(%rax)
 4ca:	00 00                	add    %al,(%rax)
 4cc:	00 00                	add    %al,(%rax)
 4ce:	00 00                	add    %al,(%rax)
 4d0:	05 08 00 00 00       	add    $0x8,%eax
 4d5:	00 00                	add    %al,(%rax)
 4d7:	00 d8                	add    %bl,%al
 4d9:	0f 20 00             	mov    %cr0,%rax
 4dc:	00 00                	add    %al,(%rax)
 4de:	00 00                	add    %al,(%rax)
 4e0:	06                   	(bad)  
 4e1:	00 00                	add    %al,(%rax)
 4e3:	00 01                	add    %al,(%rcx)
	...
 4ed:	00 00                	add    %al,(%rax)
 4ef:	00 e0                	add    %ah,%al
 4f1:	0f 20 00             	mov    %cr0,%rax
 4f4:	00 00                	add    %al,(%rax)
 4f6:	00 00                	add    %al,(%rax)
 4f8:	06                   	(bad)  
 4f9:	00 00                	add    %al,(%rax)
 4fb:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 506:	00 00                	add    %al,(%rax)
 508:	e8 0f 20 00 00       	call   251c <__FRAME_END__+0x1b98>
 50d:	00 00                	add    %al,(%rax)
 50f:	00 06                	add    %al,(%rsi)
 511:	00 00                	add    %al,(%rax)
 513:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 519 <_init-0x67>
 519:	00 00                	add    %al,(%rax)
 51b:	00 00                	add    %al,(%rax)
 51d:	00 00                	add    %al,(%rax)
 51f:	00 f0                	add    %dh,%al
 521:	0f 20 00             	mov    %cr0,%rax
 524:	00 00                	add    %al,(%rax)
 526:	00 00                	add    %al,(%rax)
 528:	06                   	(bad)  
 529:	00 00                	add    %al,(%rax)
 52b:	00 06                	add    %al,(%rsi)
	...
 535:	00 00                	add    %al,(%rax)
 537:	00 f8                	add    %bh,%al
 539:	0f 20 00             	mov    %cr0,%rax
 53c:	00 00                	add    %al,(%rax)
 53e:	00 00                	add    %al,(%rax)
 540:	06                   	(bad)  
 541:	00 00                	add    %al,(%rax)
 543:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .rela.plt:

0000000000000550 <.rela.plt>:
 550:	c8 0f 20 00          	enter  $0x200f,$0x0
 554:	00 00                	add    %al,(%rax)
 556:	00 00                	add    %al,(%rax)
 558:	07                   	(bad)  
 559:	00 00                	add    %al,(%rax)
 55b:	00 02                	add    %al,(%rdx)
	...
 565:	00 00                	add    %al,(%rax)
 567:	00 d0                	add    %dl,%al
 569:	0f 20 00             	mov    %cr0,%rax
 56c:	00 00                	add    %al,(%rax)
 56e:	00 00                	add    %al,(%rax)
 570:	07                   	(bad)  
 571:	00 00                	add    %al,(%rax)
 573:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .init:

0000000000000580 <_init>:
 580:	48 83 ec 08          	sub    $0x8,%rsp
 584:	48 8b 05 5d 0a 20 00 	mov    0x200a5d(%rip),%rax        # 200fe8 <__gmon_start__>
 58b:	48 85 c0             	test   %rax,%rax
 58e:	74 02                	je     592 <_init+0x12>
 590:	ff d0                	call   *%rax
 592:	48 83 c4 08          	add    $0x8,%rsp
 596:	c3                   	ret    

Disassembly of section .plt:

00000000000005a0 <.plt>:
 5a0:	ff 35 12 0a 20 00    	push   0x200a12(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
 5a6:	ff 25 14 0a 20 00    	jmp    *0x200a14(%rip)        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
 5ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000005b0 <printf@plt>:
 5b0:	ff 25 12 0a 20 00    	jmp    *0x200a12(%rip)        # 200fc8 <printf@GLIBC_2.2.5>
 5b6:	68 00 00 00 00       	push   $0x0
 5bb:	e9 e0 ff ff ff       	jmp    5a0 <.plt>

00000000000005c0 <pow@plt>:
 5c0:	ff 25 0a 0a 20 00    	jmp    *0x200a0a(%rip)        # 200fd0 <pow@GLIBC_2.2.5>
 5c6:	68 01 00 00 00       	push   $0x1
 5cb:	e9 d0 ff ff ff       	jmp    5a0 <.plt>

Disassembly of section .plt.got:

00000000000005d0 <__cxa_finalize@plt>:
 5d0:	ff 25 22 0a 20 00    	jmp    *0x200a22(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 5d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000005e0 <_start>:
 5e0:	31 ed                	xor    %ebp,%ebp
 5e2:	49 89 d1             	mov    %rdx,%r9
 5e5:	5e                   	pop    %rsi
 5e6:	48 89 e2             	mov    %rsp,%rdx
 5e9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 5ed:	50                   	push   %rax
 5ee:	54                   	push   %rsp
 5ef:	4c 8d 05 da 01 00 00 	lea    0x1da(%rip),%r8        # 7d0 <__libc_csu_fini>
 5f6:	48 8d 0d 63 01 00 00 	lea    0x163(%rip),%rcx        # 760 <__libc_csu_init>
 5fd:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 6ea <main>
 604:	ff 15 d6 09 20 00    	call   *0x2009d6(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 60a:	f4                   	hlt    
 60b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000610 <deregister_tm_clones>:
 610:	48 8d 3d 09 0a 20 00 	lea    0x200a09(%rip),%rdi        # 201020 <__TMC_END__>
 617:	55                   	push   %rbp
 618:	48 8d 05 01 0a 20 00 	lea    0x200a01(%rip),%rax        # 201020 <__TMC_END__>
 61f:	48 39 f8             	cmp    %rdi,%rax
 622:	48 89 e5             	mov    %rsp,%rbp
 625:	74 19                	je     640 <deregister_tm_clones+0x30>
 627:	48 8b 05 aa 09 20 00 	mov    0x2009aa(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 62e:	48 85 c0             	test   %rax,%rax
 631:	74 0d                	je     640 <deregister_tm_clones+0x30>
 633:	5d                   	pop    %rbp
 634:	ff e0                	jmp    *%rax
 636:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
 63d:	00 00 00 
 640:	5d                   	pop    %rbp
 641:	c3                   	ret    
 642:	0f 1f 40 00          	nopl   0x0(%rax)
 646:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
 64d:	00 00 00 

0000000000000650 <register_tm_clones>:
 650:	48 8d 3d c9 09 20 00 	lea    0x2009c9(%rip),%rdi        # 201020 <__TMC_END__>
 657:	48 8d 35 c2 09 20 00 	lea    0x2009c2(%rip),%rsi        # 201020 <__TMC_END__>
 65e:	55                   	push   %rbp
 65f:	48 29 fe             	sub    %rdi,%rsi
 662:	48 89 e5             	mov    %rsp,%rbp
 665:	48 c1 fe 03          	sar    $0x3,%rsi
 669:	48 89 f0             	mov    %rsi,%rax
 66c:	48 c1 e8 3f          	shr    $0x3f,%rax
 670:	48 01 c6             	add    %rax,%rsi
 673:	48 d1 fe             	sar    %rsi
 676:	74 18                	je     690 <register_tm_clones+0x40>
 678:	48 8b 05 71 09 20 00 	mov    0x200971(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 67f:	48 85 c0             	test   %rax,%rax
 682:	74 0c                	je     690 <register_tm_clones+0x40>
 684:	5d                   	pop    %rbp
 685:	ff e0                	jmp    *%rax
 687:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 68e:	00 00 
 690:	5d                   	pop    %rbp
 691:	c3                   	ret    
 692:	0f 1f 40 00          	nopl   0x0(%rax)
 696:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
 69d:	00 00 00 

00000000000006a0 <__do_global_dtors_aux>:
 6a0:	80 3d 79 09 20 00 00 	cmpb   $0x0,0x200979(%rip)        # 201020 <__TMC_END__>
 6a7:	75 2f                	jne    6d8 <__do_global_dtors_aux+0x38>
 6a9:	48 83 3d 47 09 20 00 	cmpq   $0x0,0x200947(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 6b0:	00 
 6b1:	55                   	push   %rbp
 6b2:	48 89 e5             	mov    %rsp,%rbp
 6b5:	74 0c                	je     6c3 <__do_global_dtors_aux+0x23>
 6b7:	48 8b 3d 4a 09 20 00 	mov    0x20094a(%rip),%rdi        # 201008 <__dso_handle>
 6be:	e8 0d ff ff ff       	call   5d0 <__cxa_finalize@plt>
 6c3:	e8 48 ff ff ff       	call   610 <deregister_tm_clones>
 6c8:	c6 05 51 09 20 00 01 	movb   $0x1,0x200951(%rip)        # 201020 <__TMC_END__>
 6cf:	5d                   	pop    %rbp
 6d0:	c3                   	ret    
 6d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 6d8:	f3 c3                	repz ret 
 6da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000006e0 <frame_dummy>:
 6e0:	55                   	push   %rbp
 6e1:	48 89 e5             	mov    %rsp,%rbp
 6e4:	5d                   	pop    %rbp
 6e5:	e9 66 ff ff ff       	jmp    650 <register_tm_clones>

00000000000006ea <main>:
 6ea:	55                   	push   %rbp
 6eb:	48 89 e5             	mov    %rsp,%rbp
 6ee:	48 83 ec 20          	sub    $0x20,%rsp
 6f2:	48 8b 05 17 09 20 00 	mov    0x200917(%rip),%rax        # 201010 <str1>
 6f9:	48 89 c6             	mov    %rax,%rsi
 6fc:	48 8d 3d 16 01 00 00 	lea    0x116(%rip),%rdi        # 819 <_IO_stdin_used+0x39>
 703:	b8 00 00 00 00       	mov    $0x0,%eax
 708:	e8 a3 fe ff ff       	call   5b0 <printf@plt>
 70d:	c7 45 f8 0a 00 00 00 	movl   $0xa,-0x8(%rbp)
 714:	f2 0f 2a 45 f8       	cvtsi2sdl -0x8(%rbp),%xmm0
 719:	48 8b 05 18 01 00 00 	mov    0x118(%rip),%rax        # 838 <_IO_stdin_used+0x58>
 720:	66 0f 28 c8          	movapd %xmm0,%xmm1
 724:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 728:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
 72d:	e8 8e fe ff ff       	call   5c0 <pow@plt>
 732:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
 736:	89 45 fc             	mov    %eax,-0x4(%rbp)
 739:	8b 45 fc             	mov    -0x4(%rbp),%eax
 73c:	89 c6                	mov    %eax,%esi
 73e:	48 8d 3d e3 00 00 00 	lea    0xe3(%rip),%rdi        # 828 <_IO_stdin_used+0x48>
 745:	b8 00 00 00 00       	mov    $0x0,%eax
 74a:	e8 61 fe ff ff       	call   5b0 <printf@plt>
 74f:	b8 00 00 00 00       	mov    $0x0,%eax
 754:	c9                   	leave  
 755:	c3                   	ret    
 756:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
 75d:	00 00 00 

0000000000000760 <__libc_csu_init>:
 760:	41 57                	push   %r15
 762:	41 56                	push   %r14
 764:	49 89 d7             	mov    %rdx,%r15
 767:	41 55                	push   %r13
 769:	41 54                	push   %r12
 76b:	4c 8d 25 2e 06 20 00 	lea    0x20062e(%rip),%r12        # 200da0 <__frame_dummy_init_array_entry>
 772:	55                   	push   %rbp
 773:	48 8d 2d 2e 06 20 00 	lea    0x20062e(%rip),%rbp        # 200da8 <__do_global_dtors_aux_fini_array_entry>
 77a:	53                   	push   %rbx
 77b:	41 89 fd             	mov    %edi,%r13d
 77e:	49 89 f6             	mov    %rsi,%r14
 781:	4c 29 e5             	sub    %r12,%rbp
 784:	48 83 ec 08          	sub    $0x8,%rsp
 788:	48 c1 fd 03          	sar    $0x3,%rbp
 78c:	e8 ef fd ff ff       	call   580 <_init>
 791:	48 85 ed             	test   %rbp,%rbp
 794:	74 20                	je     7b6 <__libc_csu_init+0x56>
 796:	31 db                	xor    %ebx,%ebx
 798:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 79f:	00 
 7a0:	4c 89 fa             	mov    %r15,%rdx
 7a3:	4c 89 f6             	mov    %r14,%rsi
 7a6:	44 89 ef             	mov    %r13d,%edi
 7a9:	41 ff 14 dc          	call   *(%r12,%rbx,8)
 7ad:	48 83 c3 01          	add    $0x1,%rbx
 7b1:	48 39 dd             	cmp    %rbx,%rbp
 7b4:	75 ea                	jne    7a0 <__libc_csu_init+0x40>
 7b6:	48 83 c4 08          	add    $0x8,%rsp
 7ba:	5b                   	pop    %rbx
 7bb:	5d                   	pop    %rbp
 7bc:	41 5c                	pop    %r12
 7be:	41 5d                	pop    %r13
 7c0:	41 5e                	pop    %r14
 7c2:	41 5f                	pop    %r15
 7c4:	c3                   	ret    
 7c5:	90                   	nop
 7c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
 7cd:	00 00 00 

00000000000007d0 <__libc_csu_fini>:
 7d0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000000007d4 <_fini>:
 7d4:	48 83 ec 08          	sub    $0x8,%rsp
 7d8:	48 83 c4 08          	add    $0x8,%rsp
 7dc:	c3                   	ret    

Disassembly of section .rodata:

00000000000007e0 <_IO_stdin_used>:
 7e0:	01 00                	add    %eax,(%rax)
 7e2:	02 00                	add    (%rax),%al
 7e4:	00 00                	add    %al,(%rax)
 7e6:	00 00                	add    %al,(%rax)
 7e8:	48                   	rex.W
 7e9:	65 6c                	gs insb (%dx),%es:(%rdi)
 7eb:	6c                   	insb   (%dx),%es:(%rdi)
 7ec:	6f                   	outsl  %ds:(%rsi),(%dx)
 7ed:	20 74 6f 20          	and    %dh,0x20(%rdi,%rbp,2)
 7f1:	52                   	push   %rdx
 7f2:	65 76 65             	gs jbe 85a <__GNU_EH_FRAME_HDR+0x1a>
 7f5:	72 73                	jb     86a <__GNU_EH_FRAME_HDR+0x2a>
 7f7:	65 20 45 6e          	and    %al,%gs:0x6e(%rbp)
 7fb:	67 69 6e 65 65 72 69 	imul   $0x6e697265,0x65(%esi),%ebp
 802:	6e 
 803:	67 00 63 74          	add    %ah,0x74(%ebx)
 807:	66 7b 55             	data16 jnp 85f <__GNU_EH_FRAME_HDR+0x1f>
 80a:	70 64                	jo     870 <__GNU_EH_FRAME_HDR+0x30>
 80c:	61                   	(bad)  
 80d:	74 65                	je     874 <__GNU_EH_FRAME_HDR+0x34>
 80f:	64 5f                	fs pop %rdi
 811:	53                   	push   %rbx
 812:	74 72                	je     886 <__GNU_EH_FRAME_HDR+0x46>
 814:	69 6e 67 7d 00 53 74 	imul   $0x7453007d,0x67(%rsi),%ebp
 81b:	72 69                	jb     886 <__GNU_EH_FRAME_HDR+0x46>
 81d:	6e                   	outsb  %ds:(%rsi),(%dx)
 81e:	67 20 69 73          	and    %ch,0x73(%ecx)
 822:	3a 20                	cmp    (%rax),%ah
 824:	25 73 0a 00 4e       	and    $0x4e000a73,%eax
 829:	75 6d                	jne    898 <__GNU_EH_FRAME_HDR+0x58>
 82b:	62 65                	(bad)  
 82d:	72 20                	jb     84f <__GNU_EH_FRAME_HDR+0xf>
 82f:	69 73 3a 20 25 64 0a 	imul   $0xa642520,0x3a(%rbx),%esi
	...
 83e:	00                   	.byte 0x0
 83f:	40                   	rex

Disassembly of section .eh_frame_hdr:

0000000000000840 <__GNU_EH_FRAME_HDR>:
 840:	01 1b                	add    %ebx,(%rbx)
 842:	03 3b                	add    (%rbx),%edi
 844:	3c 00                	cmp    $0x0,%al
 846:	00 00                	add    %al,(%rax)
 848:	06                   	(bad)  
 849:	00 00                	add    %al,(%rax)
 84b:	00 60 fd             	add    %ah,-0x3(%rax)
 84e:	ff                   	(bad)  
 84f:	ff 88 00 00 00 90    	decl   -0x70000000(%rax)
 855:	fd                   	std    
 856:	ff                   	(bad)  
 857:	ff b0 00 00 00 a0    	push   -0x60000000(%rax)
 85d:	fd                   	std    
 85e:	ff                   	(bad)  
 85f:	ff 58 00             	lcall  *0x0(%rax)
 862:	00 00                	add    %al,(%rax)
 864:	aa                   	stos   %al,%es:(%rdi)
 865:	fe                   	(bad)  
 866:	ff                   	(bad)  
 867:	ff c8                	dec    %eax
 869:	00 00                	add    %al,(%rax)
 86b:	00 20                	add    %ah,(%rax)
 86d:	ff                   	(bad)  
 86e:	ff                   	(bad)  
 86f:	ff                   	(bad)  
 870:	e8 00 00 00 90       	call   ffffffff90000875 <_end+0xffffffff8fdff84d>
 875:	ff                   	(bad)  
 876:	ff                   	(bad)  
 877:	ff 30                	push   (%rax)
 879:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

0000000000000880 <__FRAME_END__-0x104>:
 880:	14 00                	adc    $0x0,%al
 882:	00 00                	add    %al,(%rax)
 884:	00 00                	add    %al,(%rax)
 886:	00 00                	add    %al,(%rax)
 888:	01 7a 52             	add    %edi,0x52(%rdx)
 88b:	00 01                	add    %al,(%rcx)
 88d:	78 10                	js     89f <__GNU_EH_FRAME_HDR+0x5f>
 88f:	01 1b                	add    %ebx,(%rbx)
 891:	0c 07                	or     $0x7,%al
 893:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 899:	00 00                	add    %al,(%rax)
 89b:	00 1c 00             	add    %bl,(%rax,%rax,1)
 89e:	00 00                	add    %al,(%rax)
 8a0:	40 fd                	rex std 
 8a2:	ff                   	(bad)  
 8a3:	ff 2b                	ljmp   *(%rbx)
	...
 8ad:	00 00                	add    %al,(%rax)
 8af:	00 14 00             	add    %dl,(%rax,%rax,1)
 8b2:	00 00                	add    %al,(%rax)
 8b4:	00 00                	add    %al,(%rax)
 8b6:	00 00                	add    %al,(%rax)
 8b8:	01 7a 52             	add    %edi,0x52(%rdx)
 8bb:	00 01                	add    %al,(%rcx)
 8bd:	78 10                	js     8cf <__GNU_EH_FRAME_HDR+0x8f>
 8bf:	01 1b                	add    %ebx,(%rbx)
 8c1:	0c 07                	or     $0x7,%al
 8c3:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 8c9:	00 00                	add    %al,(%rax)
 8cb:	00 1c 00             	add    %bl,(%rax,%rax,1)
 8ce:	00 00                	add    %al,(%rax)
 8d0:	d0 fc                	sar    %ah
 8d2:	ff                   	(bad)  
 8d3:	ff 30                	push   (%rax)
 8d5:	00 00                	add    %al,(%rax)
 8d7:	00 00                	add    %al,(%rax)
 8d9:	0e                   	(bad)  
 8da:	10 46 0e             	adc    %al,0xe(%rsi)
 8dd:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 8e0:	0b 77 08             	or     0x8(%rdi),%esi
 8e3:	80 00 3f             	addb   $0x3f,(%rax)
 8e6:	1a 3b                	sbb    (%rbx),%bh
 8e8:	2a 33                	sub    (%rbx),%dh
 8ea:	24 22                	and    $0x22,%al
 8ec:	00 00                	add    %al,(%rax)
 8ee:	00 00                	add    %al,(%rax)
 8f0:	14 00                	adc    $0x0,%al
 8f2:	00 00                	add    %al,(%rax)
 8f4:	44 00 00             	add    %r8b,(%rax)
 8f7:	00 d8                	add    %bl,%al
 8f9:	fc                   	cld    
 8fa:	ff                   	(bad)  
 8fb:	ff 08                	decl   (%rax)
	...
 905:	00 00                	add    %al,(%rax)
 907:	00 1c 00             	add    %bl,(%rax,%rax,1)
 90a:	00 00                	add    %al,(%rax)
 90c:	5c                   	pop    %rsp
 90d:	00 00                	add    %al,(%rax)
 90f:	00 da                	add    %bl,%dl
 911:	fd                   	std    
 912:	ff                   	(bad)  
 913:	ff 6c 00 00          	ljmp   *0x0(%rax,%rax,1)
 917:	00 00                	add    %al,(%rax)
 919:	41 0e                	rex.B (bad) 
 91b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 921:	02 67 0c             	add    0xc(%rdi),%ah
 924:	07                   	(bad)  
 925:	08 00                	or     %al,(%rax)
 927:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
 92b:	00 7c 00 00          	add    %bh,0x0(%rax,%rax,1)
 92f:	00 30                	add    %dh,(%rax)
 931:	fe                   	(bad)  
 932:	ff                   	(bad)  
 933:	ff 65 00             	jmp    *0x0(%rbp)
 936:	00 00                	add    %al,(%rax)
 938:	00 42 0e             	add    %al,0xe(%rdx)
 93b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 941:	8e 03                	mov    (%rbx),%es
 943:	45 0e                	rex.RB (bad) 
 945:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 94b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301799 <_end+0xffffffff86100771>
 951:	06                   	(bad)  
 952:	48 0e                	rex.W (bad) 
 954:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 95a:	72 0e                	jb     96a <__GNU_EH_FRAME_HDR+0x12a>
 95c:	38 41 0e             	cmp    %al,0xe(%rcx)
 95f:	30 41 0e             	xor    %al,0xe(%rcx)
 962:	28 42 0e             	sub    %al,0xe(%rdx)
 965:	20 42 0e             	and    %al,0xe(%rdx)
 968:	18 42 0e             	sbb    %al,0xe(%rdx)
 96b:	10 42 0e             	adc    %al,0xe(%rdx)
 96e:	08 00                	or     %al,(%rax)
 970:	10 00                	adc    %al,(%rax)
 972:	00 00                	add    %al,(%rax)
 974:	c4                   	(bad)  
 975:	00 00                	add    %al,(%rax)
 977:	00 58 fe             	add    %bl,-0x2(%rax)
 97a:	ff                   	(bad)  
 97b:	ff 02                	incl   (%rdx)
 97d:	00 00                	add    %al,(%rax)
 97f:	00 00                	add    %al,(%rax)
 981:	00 00                	add    %al,(%rax)
	...

0000000000000984 <__FRAME_END__>:
 984:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200da0 <__frame_dummy_init_array_entry>:
  200da0:	e0 06                	loopne 200da8 <__init_array_end>
  200da2:	00 00                	add    %al,(%rax)
  200da4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000200da8 <__do_global_dtors_aux_fini_array_entry>:
  200da8:	a0                   	.byte 0xa0
  200da9:	06                   	(bad)  
  200daa:	00 00                	add    %al,(%rax)
  200dac:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000200db0 <_DYNAMIC>:
  200db0:	01 00                	add    %eax,(%rax)
  200db2:	00 00                	add    %al,(%rax)
  200db4:	00 00                	add    %al,(%rax)
  200db6:	00 00                	add    %al,(%rax)
  200db8:	01 00                	add    %eax,(%rax)
  200dba:	00 00                	add    %al,(%rax)
  200dbc:	00 00                	add    %al,(%rax)
  200dbe:	00 00                	add    %al,(%rax)
  200dc0:	01 00                	add    %eax,(%rax)
  200dc2:	00 00                	add    %al,(%rax)
  200dc4:	00 00                	add    %al,(%rax)
  200dc6:	00 00                	add    %al,(%rax)
  200dc8:	54                   	push   %rsp
  200dc9:	00 00                	add    %al,(%rax)
  200dcb:	00 00                	add    %al,(%rax)
  200dcd:	00 00                	add    %al,(%rax)
  200dcf:	00 0c 00             	add    %cl,(%rax,%rax,1)
  200dd2:	00 00                	add    %al,(%rax)
  200dd4:	00 00                	add    %al,(%rax)
  200dd6:	00 00                	add    %al,(%rax)
  200dd8:	80 05 00 00 00 00 00 	addb   $0x0,0x0(%rip)        # 200ddf <_DYNAMIC+0x2f>
  200ddf:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 200de5 <_DYNAMIC+0x35>
  200de5:	00 00                	add    %al,(%rax)
  200de7:	00 d4                	add    %dl,%ah
  200de9:	07                   	(bad)  
  200dea:	00 00                	add    %al,(%rax)
  200dec:	00 00                	add    %al,(%rax)
  200dee:	00 00                	add    %al,(%rax)
  200df0:	19 00                	sbb    %eax,(%rax)
  200df2:	00 00                	add    %al,(%rax)
  200df4:	00 00                	add    %al,(%rax)
  200df6:	00 00                	add    %al,(%rax)
  200df8:	a0 0d 20 00 00 00 00 	movabs 0x1b0000000000200d,%al
  200dff:	00 1b 
  200e01:	00 00                	add    %al,(%rax)
  200e03:	00 00                	add    %al,(%rax)
  200e05:	00 00                	add    %al,(%rax)
  200e07:	00 08                	add    %cl,(%rax)
  200e09:	00 00                	add    %al,(%rax)
  200e0b:	00 00                	add    %al,(%rax)
  200e0d:	00 00                	add    %al,(%rax)
  200e0f:	00 1a                	add    %bl,(%rdx)
  200e11:	00 00                	add    %al,(%rax)
  200e13:	00 00                	add    %al,(%rax)
  200e15:	00 00                	add    %al,(%rax)
  200e17:	00 a8 0d 20 00 00    	add    %ch,0x200d(%rax)
  200e1d:	00 00                	add    %al,(%rax)
  200e1f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  200e22:	00 00                	add    %al,(%rax)
  200e24:	00 00                	add    %al,(%rax)
  200e26:	00 00                	add    %al,(%rax)
  200e28:	08 00                	or     %al,(%rax)
  200e2a:	00 00                	add    %al,(%rax)
  200e2c:	00 00                	add    %al,(%rax)
  200e2e:	00 00                	add    %al,(%rax)
  200e30:	f5                   	cmc    
  200e31:	fe                   	(bad)  
  200e32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200e35:	00 00                	add    %al,(%rax)
  200e37:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  200e3d:	00 00                	add    %al,(%rax)
  200e3f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200e45 <_DYNAMIC+0x95>
  200e45:	00 00                	add    %al,(%rax)
  200e47:	00 78 03             	add    %bh,0x3(%rax)
  200e4a:	00 00                	add    %al,(%rax)
  200e4c:	00 00                	add    %al,(%rax)
  200e4e:	00 00                	add    %al,(%rax)
  200e50:	06                   	(bad)  
  200e51:	00 00                	add    %al,(%rax)
  200e53:	00 00                	add    %al,(%rax)
  200e55:	00 00                	add    %al,(%rax)
  200e57:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  200e5d:	00 00                	add    %al,(%rax)
  200e5f:	00 0a                	add    %cl,(%rdx)
  200e61:	00 00                	add    %al,(%rax)
  200e63:	00 00                	add    %al,(%rax)
  200e65:	00 00                	add    %al,(%rax)
  200e67:	00 92 00 00 00 00    	add    %dl,0x0(%rdx)
  200e6d:	00 00                	add    %al,(%rax)
  200e6f:	00 0b                	add    %cl,(%rbx)
  200e71:	00 00                	add    %al,(%rax)
  200e73:	00 00                	add    %al,(%rax)
  200e75:	00 00                	add    %al,(%rax)
  200e77:	00 18                	add    %bl,(%rax)
  200e79:	00 00                	add    %al,(%rax)
  200e7b:	00 00                	add    %al,(%rax)
  200e7d:	00 00                	add    %al,(%rax)
  200e7f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 200e85 <_DYNAMIC+0xd5>
	...
  200e8d:	00 00                	add    %al,(%rax)
  200e8f:	00 03                	add    %al,(%rbx)
  200e91:	00 00                	add    %al,(%rax)
  200e93:	00 00                	add    %al,(%rax)
  200e95:	00 00                	add    %al,(%rax)
  200e97:	00 b0 0f 20 00 00    	add    %dh,0x200f(%rax)
  200e9d:	00 00                	add    %al,(%rax)
  200e9f:	00 02                	add    %al,(%rdx)
  200ea1:	00 00                	add    %al,(%rax)
  200ea3:	00 00                	add    %al,(%rax)
  200ea5:	00 00                	add    %al,(%rax)
  200ea7:	00 30                	add    %dh,(%rax)
  200ea9:	00 00                	add    %al,(%rax)
  200eab:	00 00                	add    %al,(%rax)
  200ead:	00 00                	add    %al,(%rax)
  200eaf:	00 14 00             	add    %dl,(%rax,%rax,1)
  200eb2:	00 00                	add    %al,(%rax)
  200eb4:	00 00                	add    %al,(%rax)
  200eb6:	00 00                	add    %al,(%rax)
  200eb8:	07                   	(bad)  
  200eb9:	00 00                	add    %al,(%rax)
  200ebb:	00 00                	add    %al,(%rax)
  200ebd:	00 00                	add    %al,(%rax)
  200ebf:	00 17                	add    %dl,(%rdi)
  200ec1:	00 00                	add    %al,(%rax)
  200ec3:	00 00                	add    %al,(%rax)
  200ec5:	00 00                	add    %al,(%rax)
  200ec7:	00 50 05             	add    %dl,0x5(%rax)
  200eca:	00 00                	add    %al,(%rax)
  200ecc:	00 00                	add    %al,(%rax)
  200ece:	00 00                	add    %al,(%rax)
  200ed0:	07                   	(bad)  
  200ed1:	00 00                	add    %al,(%rax)
  200ed3:	00 00                	add    %al,(%rax)
  200ed5:	00 00                	add    %al,(%rax)
  200ed7:	00 60 04             	add    %ah,0x4(%rax)
  200eda:	00 00                	add    %al,(%rax)
  200edc:	00 00                	add    %al,(%rax)
  200ede:	00 00                	add    %al,(%rax)
  200ee0:	08 00                	or     %al,(%rax)
  200ee2:	00 00                	add    %al,(%rax)
  200ee4:	00 00                	add    %al,(%rax)
  200ee6:	00 00                	add    %al,(%rax)
  200ee8:	f0 00 00             	lock add %al,(%rax)
  200eeb:	00 00                	add    %al,(%rax)
  200eed:	00 00                	add    %al,(%rax)
  200eef:	00 09                	add    %cl,(%rcx)
  200ef1:	00 00                	add    %al,(%rax)
  200ef3:	00 00                	add    %al,(%rax)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 18                	add    %bl,(%rax)
  200ef9:	00 00                	add    %al,(%rax)
  200efb:	00 00                	add    %al,(%rax)
  200efd:	00 00                	add    %al,(%rax)
  200eff:	00 1e                	add    %bl,(%rsi)
  200f01:	00 00                	add    %al,(%rax)
  200f03:	00 00                	add    %al,(%rax)
  200f05:	00 00                	add    %al,(%rax)
  200f07:	00 08                	add    %cl,(%rax)
  200f09:	00 00                	add    %al,(%rax)
  200f0b:	00 00                	add    %al,(%rax)
  200f0d:	00 00                	add    %al,(%rax)
  200f0f:	00 fb                	add    %bh,%bl
  200f11:	ff                   	(bad)  
  200f12:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f15:	00 00                	add    %al,(%rax)
  200f17:	00 01                	add    %al,(%rcx)
  200f19:	00 00                	add    %al,(%rax)
  200f1b:	08 00                	or     %al,(%rax)
  200f1d:	00 00                	add    %al,(%rax)
  200f1f:	00 fe                	add    %bh,%dh
  200f21:	ff                   	(bad)  
  200f22:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 20                	add    %ah,(%rax)
  200f29:	04 00                	add    $0x0,%al
  200f2b:	00 00                	add    %al,(%rax)
  200f2d:	00 00                	add    %al,(%rax)
  200f2f:	00 ff                	add    %bh,%bh
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f35:	00 00                	add    %al,(%rax)
  200f37:	00 02                	add    %al,(%rdx)
  200f39:	00 00                	add    %al,(%rax)
  200f3b:	00 00                	add    %al,(%rax)
  200f3d:	00 00                	add    %al,(%rax)
  200f3f:	00 f0                	add    %dh,%al
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f45:	00 00                	add    %al,(%rax)
  200f47:	00 0a                	add    %cl,(%rdx)
  200f49:	04 00                	add    $0x0,%al
  200f4b:	00 00                	add    %al,(%rax)
  200f4d:	00 00                	add    %al,(%rax)
  200f4f:	00 f9                	add    %bh,%cl
  200f51:	ff                   	(bad)  
  200f52:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f55:	00 00                	add    %al,(%rax)
  200f57:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200f5d <_DYNAMIC+0x1ad>
	...

Disassembly of section .got:

0000000000200fb0 <_GLOBAL_OFFSET_TABLE_>:
  200fb0:	b0 0d                	mov    $0xd,%al
  200fb2:	20 00                	and    %al,(%rax)
	...
  200fc8:	b6 05                	mov    $0x5,%dh
  200fca:	00 00                	add    %al,(%rax)
  200fcc:	00 00                	add    %al,(%rax)
  200fce:	00 00                	add    %al,(%rax)
  200fd0:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 200fd7 <_GLOBAL_OFFSET_TABLE_+0x27>
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     %dl,(%rax)
  20100a:	20 00                	and    %al,(%rax)
  20100c:	00 00                	add    %al,(%rax)
	...

0000000000201010 <str1>:
  201010:	e8 07 00 00 00       	call   20101c <str2+0x4>
  201015:	00 00                	add    %al,(%rax)
	...

0000000000201018 <str2>:
  201018:	05 08 00 00 00       	add    $0x8,%eax
  20101d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000201020 <completed.7698>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x508>
   a:	74 75                	je     81 <_init-0x4ff>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 35 2e 30 2d 33    	cs xor $0x332d302e,%eax
  14:	75 62                	jne    78 <_init-0x508>
  16:	75 6e                	jne    86 <_init-0x4fa>
  18:	74 75                	je     8f <_init-0x4f1>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  22:	20 37                	and    %dh,(%rdi)
  24:	2e                   	cs
  25:	35                   	.byte 0x35
  26:	2e 30 00             	cs xor %al,(%rax)
